data = """The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors"""

def generate_list_of_angular(num):
    
    datas= [data for data in range(1,num)]
    print(data)

def find_sum_of_divisors():
    next = 1
    turn_off = True
    n = 1
   
    while turn_off:
     
     
        temp=[]
        index=0
        prime=int(n*(n+1)/2)

        

        while index != prime:
            index += 1
            if prime % index == 0:
                print(index)
                temp.append(index)
        if len(temp) > 500:
            print(prime)
            print(len(temp))
            turn_off = False
            break


        if n  > next:
            next += 1
            print(next)

        print(n)
        n += 1000
find_sum_of_divisors()
